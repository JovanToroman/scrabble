{"version":3,"sources":["app/mutations.cljs"],"mappings":";;;;AAIA,AAAA;;;AAAAA,AAAA,AAAAC,AAAA,AAAA;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAuBe;AAAvB,AAAA,AAAA,AAAA;AAGWM;AAHX,AAAA;;AAAA,AAAA;AAAApB;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAOyBc;AAPzB,AAAAV,AAAAJ,AAAA,AAO+BoB;AAP/B,AAAAhB,AAAAJ,AAAA,AAOsCe;AAPtC,AAQgB,AAAAW,AAAgC,AAAA,AAAA,AAAA,AAAA,AAACJ,AAAOF;AAAxCM,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAzB,AAAA,AAAAyB,AAAA,AAAA,AAAA,AAAA,AAAAxB,AAAAC,AAAAuB,AAAAA;AAAA,AAAAtB,AAAAsB,AAAA,AAAOC;AAAP,AACE,AAACJ,AAAMT,AAAMU,AAAS,AAAA,AAAA,AAACC,AAAKV,AAAiBY;;AAT/D;;AAAA,AAAA;AAAAtB;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAL,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAA,AAAAJ,AAAAC,AAAAG,AAAAA;AAAA,AAAAF,AAAAE,AAAA,AAIsBQ;AAJtB,AAAAV,AAAAE,AAAA,AAI4Bc;AAJ5B,AAAAhB,AAAAE,AAAA,AAImCS;AAJnC,AAKa,AAAMM,AAAO,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAAOF;AAArB,AACE,AAACG,AAAMT,AAAMU,AAAS,AAAA,AAAA,AAACC,AAAKV,AAAkBM;;AAN7D;;AAAA,AAAA;AAAAd;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAP,AAAA,AAAAO,AAAA,AAAA,AAAA,AAAA,AAAAN,AAAAC,AAAAK,AAAAA;AAAA,AAAAJ,AAAAI,AAAA,AACmBM;AADnB,AAAAV,AAAAI,AAAA,AACyBO;AADzB,AAEU,AAAA,AAAA,AAACC,AAAMF,AAAMG,AAAUF,AAAIG;;AAFrC;;AAAA,AAAA;AAAAT;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAAF,AAAA;AAAA,AAAA,AAAAC;AAAA,AAAA,AAAAE,AAAAF;AAAA,AAAA,AAAAE,AAAAA,AAAAH,AAAAG,AAAAH;;AAAA","names":["app.mutations/scramble","com.fulcrologic.fulcro.mutations/->Mutation","com.fulcrologic.fulcro.mutations/mutate","fulcro-mutation-env-symbol","p__52654","map__52655","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","p__52659","map__52660","p__52662","map__52663","env","temp__5735__auto__","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","default-action","_","state","ref","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","cljs.core/update-in","cljs.core/dissoc","_env","result","answer","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc-in","cljs.core.into.cljs$core$IFn$_invoke$arity$2","map__52657","error-message"],"sourcesContent":["(ns app.mutations\r\n  (:require [com.fulcrologic.fulcro.mutations :refer [defmutation]]\r\n            [com.wsscode.pathom.core :as p]))\r\n\r\n(defmutation scramble [_]\r\n  (action [{:keys [state ref]}]\r\n          (swap! state update-in ref dissoc :ui/answer :ui/error))\r\n  (remote [_env] true)\r\n  (ok-action [{:keys [state result ref]}]\r\n             (let [answer (get-in result [:body `scramble :answer])]\r\n               (swap! state assoc-in (into ref [:ui/answer]) answer)))\r\n  (error-action [{:keys [state result ref]}]\r\n                (let [{error-message ::p/error} (get-in result [:body `scramble])]\r\n                  (swap! state assoc-in (into ref [:ui/error]) error-message))))\r\n"]}